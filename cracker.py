import sys
import hashlib
from pwn import log

def md5sumhex(data):
    return hashlib.md5(data).hexdigest()

def sha1sumhex(data):
    return hashlib.sha1(data).hexdigest()

def sha256sumhex(data):
    return hashlib.sha256(data).hexdigest()

if len(sys.argv) != 4:
    print("Invalid arguments!")
    print(">> {} <hash option> <hash> <wordlist>".format(sys.argv[0])) 
    print("Hash options")
    print("""-m   md5 hashes
             -s   sha256 sum
             -d   sha1
          """)
    sys.exit()

hash_option = sys.argv[1]
wanted_hash = sys.argv[2]

password_file = sys.argv[3]
attempts = 0

hash_function = None

if hash_option == "-m":
    hash_function = md5sumhex
elif hash_option == "-s":
    hash_function = sha256sumhex
elif hash_option == "-d":
    hash_function = sha1sumhex
else:
    print("Invalid hash option!")
    sys.exit()

with log.progress("Attempting to crack: {}!\n".format(wanted_hash)) as p:
    with open(password_file, "r", encoding='latin-1') as password_list:
        for password in password_list:
            password = password.strip("\n").encode('latin-1')
            password_hash = hash_function(password)
            p.status("[{}] {} == {}".format(attempts, password.decode('latin-1'), password_hash))
            if password_hash == wanted_hash:
                p.success("Password hash found after {} attempts! {} hashes to {}".format(attempts, password.decode('latin-1'), password_hash))
                exit()
            attempts += 1
        p.failure("Password hash not found")
